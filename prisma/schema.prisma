// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  password      String
  image         String?
  accounts      Account[]
  sessions      Session[]
  Solicitacao   Solicitacao[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Unidade {
  id          String        @id @default(cuid())
  name        String
  Solicitacao Solicitacao[]
}

model Categoria {
  id          String        @id @default(cuid())
  name        String
  produto     Produto[]
  Solicitacao Solicitacao[]
}

model Marca {
  id      String    @id @default(cuid())
  name    String
  produto Produto[]
}

model Dioptria {
  id      String    @id @default(cuid())
  name    String
  produto Produto[]
}

model Cilindro {
  id      String    @id @default(cuid())
  name    String
  produto Produto[]
}

model Medico {
  id   String @id @default(cuid())
  name String
}

model Produto {
  id          String  @id @default(cuid())
  name        String
  categoriaId String?
  marcaId     String?
  dioptriaId  String?
  cilindroId  String?
  qtdeMin     Int?
  qtdeMax     Int?
  unidMedida  String?

  Categoria     Categoria?   @relation(fields: [categoriaId], references: [id])
  Marca         Marca?       @relation(fields: [marcaId], references: [id])
  Dioptria      Dioptria?    @relation(fields: [dioptriaId], references: [id])
  Cilindro      Cilindro?    @relation(fields: [cilindroId], references: [id])
  Solicitacao   Solicitacao? @relation(fields: [solicitacaoId], references: [id])
  solicitacaoId String?
}

model Solicitacao {
  id          String    @id @default(cuid())
  name        String
  produtos    Produto[]
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  unidade     Unidade   @relation(fields: [unidadeId], references: [id])
  usuario     User      @relation(fields: [userId], references: [id])
  resposta    String?
  status      String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  categoriaId String
  unidadeId   String
  userId      String
}

model SolicitacaoLio {
  id              String  @id @default(cuid())
  paciente        String
  dtCirurgia      String
  lentePrincipal  String
  dioptria        String
  cilindro        String
  lenteReserva    String?
  dioptriaReserva String?
  cilindroReserva String?
  medico          String
  unidade         String
  solicitante     String
  injetorCartucho String?
  dtPagamento     String
  comprovante     String?
  formCirurgico   String?
  resposta        String?
  status          String?
  categoria       String  @default("Lio")

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
